# 去混响任务专用配置文件
# 基于config.yaml，针对去混响任务进行优化

defaults:
  - _self_
  - dset: musdb44
  - svd: default
  - variant: default
  - override hydra/hydra_logging: colorlog
  - override hydra/job_logging: colorlog

dummy:
dset:
  musdb: 
  musdb_samplerate: 44100
  use_musdb: false   # 不使用musdb
  wav: /home/ps/xxn/data/dereverberation_pad  # 去混响数据路径
  wav2:  # 第二个数据集（可选）
  segment: 11
  shift: 1
  train_valid: false
  full_cv: true
  samplerate: 16000   # 去混响任务采样率
  channels: 1         # 单声道
  normalize: true
  metadata: ./metadata
  sources: ['dry', 'rir']  # 去混响任务的输出源
  valid_samples: # valid dataset size
  backend: null   # torchaudio后端

test:
  save: False
  best: True
  workers: 0  # 禁用多进程评估
  every: 20   # 每20个epoch评估一次
  split: true
  shifts: 1
  overlap: 0.25
  sdr: false  # 使用快速NSDR
  metric: 'nsdr'  # 使用NSDR作为主要指标
  nonhq:   # 非HQ测试集路径

epochs: 100  # 增加训练轮次
batch_size: 16  # 降低batch_size以适应内存
max_batches:  # 限制每epoch批次数

optim:
  lr: 2e-4  # 稍微降低学习率
  momentum: 0.9
  beta2: 0.999
  loss: l1    # 基础损失类型
  optim: adam
  weight_decay: 1e-6  # 添加轻微正则化
  clip_grad: 1.0  # 添加梯度裁剪
  
  # -------去混响专用损失函数-------
  dereverberation_loss:
    enabled: true           # 启用去混响专用损失
    # 损失权重参数
    dry_weight: 3.0        # 干声权重（主要目标）
    rir_weight: 1.0        # RIR权重
    consistency_weight: 0.2 # 一致性约束权重
    time_weight: 1.0       # 时域损失权重
    freq_weight: 0.5       # 频域损失权重
    mel_weight: 0.3        # Mel谱感知损失权重

seed: 42
debug: false
valid_apply: true  # 验证时使用apply_model
flag:
save_every: 25  # 每25个epoch保存检查点
weights: [3., 1.]  # 干声权重 > RIR权重

# 数据增强（针对去混响任务调整）
augment:
  shift_same: false
  repitch:
    proba: 0.0    # 去混响不需要音高变化
    max_tempo: 12
  remix:
    proba: 0.0    # 去混响不需要remix
    group_size: 4
  scale:
    proba: 0.3    # 降低音量缩放概率
    min: 0.8      # 缩小缩放范围
    max: 1.2
  flip: false     # 去混响不需要翻转

continue_from:  # 从其他实验继续训练
continue_pretrained:   # 使用预训练模型
pretrained_repo:   # 预训练模型仓库
continue_best: true
continue_opt: false

misc:
  num_workers: 4  # 减少数据加载进程数
  num_prints: 4
  show: false
  verbose: false

# EMA设置
ema:
  epoch: [0.999]  # 添加epoch级别的EMA
  batch: []

use_train_segment: true
model_segment:  # 模型segment（通常是训练segment的4倍）
model: htdemucs  # 使用HTDemucs模型

# HTDemucs模型参数（针对去混响优化）
htdemucs:
  # Channels
  channels: 48
  channels_time:
  growth: 2
  # STFT
  nfft: 4096
  wiener_iters: 0
  end_iters: 0
  wiener_residual: false
  cac: true
  # Main structure
  depth: 4
  rewrite: true
  # Frequency Branch
  multi_freqs: []
  multi_freqs_depth: 3
  freq_emb: 0.2
  emb_scale: 10
  emb_smooth: true
  # Convolutions
  kernel_size: 8
  stride: 4
  time_stride: 2
  context: 1
  context_enc: 0
  # normalization
  norm_starts: 4
  norm_groups: 4
  # DConv residual branch
  dconv_mode: 1
  dconv_depth: 2
  dconv_comp: 8
  dconv_init: 1e-3
  # Before the Transformer
  bottom_channels: 0
  # CrossTransformer
  t_layers: 5
  t_hidden_scale: 4.0
  t_heads: 8
  t_dropout: 0.0
  t_layer_scale: True
  t_gelu: True
  # Positional Embedding
  t_emb: sin
  t_max_positions: 10000
  t_max_period: 10000.0 
  t_weight_pos_embed: 1.0
  t_cape_mean_normalize: True
  t_cape_augment: True
  t_cape_glob_loc_scale: [5000.0, 1.0, 1.4]
  t_sin_random_shift: 0
  # norm before a transformer encoder
  t_norm_in: True
  t_norm_in_group: False
  # norm inside the encoder
  t_group_norm: False
  t_norm_first: True
  t_norm_out: True
  # optim
  t_weight_decay: 0.0
  t_lr:
  # sparsity
  t_sparse_self_attn: False
  t_sparse_cross_attn: False
  t_mask_type: diag
  t_mask_random_seed: 42
  t_sparse_attn_window: 400
  t_global_window: 100
  t_sparsity: 0.95
  t_auto_sparsity: False
  # Cross Encoder First (False)
  t_cross_first: False
  # Weight init
  rescale: 0.1

# SVD配置
svd:
  penalty: 0
  min_size: 0.1
  dim: 1
  niters: 2
  powm: false
  proba: 1
  conv_only: false
  convtr: false
  bs: 1

# 量化配置
quant:
  diffq:    # diffq penalty, typically 1e-4 or 3e-4
  qat:      # use QAT with a fixed number of bits (not as good as diffq)
  min_size: 0.2
  group_size: 8

# Dora配置
dora:
  dir: outputs
  exclude: ["misc.*", "slurm.*", 'test.reval', 'flag', 'dset.backend']

# Slurm配置
slurm:
  time: 4320
  constraint: volta32gb
  setup: ['module load cudnn/v8.4.1.50-cuda.11.6 NCCL/2.11.4-6-cuda.11.6 cuda/11.6']

# Hydra配置
hydra:
  job_logging:
    formatters:
      colorlog:
        datefmt: "%m-%d %H:%M:%S"